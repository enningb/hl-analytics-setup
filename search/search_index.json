{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"home Als je wil starten met analytics en Python zul je een aantal tools moeten installeren. Het vergt een omgeving waarin je kan werken met de juiste tools. Hier wordt beschreven hoe je snel up-and-running kunt zijn. Stap 1: Installatie Anaconda Om te werken met Python of R moet dat geinstalleerd worden. Anaconda is een manier om Python (maar ook R) te installeren. De installatie staat hier beschreven. Github Desktop Een belangrijk principe in het werken met analytics is het scheiden van code en data. Daardoor is het makkelijk om code te delen en reproduceerbaar te maken. Je code (de scripts die je gebruikt om je analyse te maken) sla je doorgaans op in een versiebeheersysteem (git). Dat betekent dat je je code op een centrale plek opslaat, zodat ook anderen daar stukjes aan kunnen toevoegen of gewoon je code gebruiken. Github biedt een centrale plek om die code op te slaan en heeft een tool om dat te doen, Github Desktop. hier beschreven. Visual Studio Code Werken met Python is eigenlijk programmeren. Programmeurs hebben allerlei tools en hulpmiddelen om het werken makkelijk te maken (automatische controle op syntax-fouten, documentatie-tools, etc.). Visual Studio Code is een tool waarmee je python-, R-, html- json-, csv- en andere files kan bewerken. Installatie staat hier Stap 2: Configureren Aanmaken analytics environment Voor het werken met Python maken we een environment . Een environment is een afgeschermde omgeving waarin je Python packages kan installeren en verwijderen. Hoe je dat doet staat hier beschreven. Ook staat beschreven hoe je onze eigen packages kan installeren. Stap 3: Aan de slag met een standaardwerkwijze Als Python is geinstalleerd kan je aan de slag. Hoe je dat doet staat hier .","title":"home"},{"location":"#home","text":"Als je wil starten met analytics en Python zul je een aantal tools moeten installeren. Het vergt een omgeving waarin je kan werken met de juiste tools. Hier wordt beschreven hoe je snel up-and-running kunt zijn.","title":"home"},{"location":"#stap-1-installatie","text":"","title":"Stap 1: Installatie"},{"location":"#anaconda","text":"Om te werken met Python of R moet dat geinstalleerd worden. Anaconda is een manier om Python (maar ook R) te installeren. De installatie staat hier beschreven.","title":"Anaconda"},{"location":"#github-desktop","text":"Een belangrijk principe in het werken met analytics is het scheiden van code en data. Daardoor is het makkelijk om code te delen en reproduceerbaar te maken. Je code (de scripts die je gebruikt om je analyse te maken) sla je doorgaans op in een versiebeheersysteem (git). Dat betekent dat je je code op een centrale plek opslaat, zodat ook anderen daar stukjes aan kunnen toevoegen of gewoon je code gebruiken. Github biedt een centrale plek om die code op te slaan en heeft een tool om dat te doen, Github Desktop. hier beschreven.","title":"Github Desktop"},{"location":"#visual-studio-code","text":"Werken met Python is eigenlijk programmeren. Programmeurs hebben allerlei tools en hulpmiddelen om het werken makkelijk te maken (automatische controle op syntax-fouten, documentatie-tools, etc.). Visual Studio Code is een tool waarmee je python-, R-, html- json-, csv- en andere files kan bewerken. Installatie staat hier","title":"Visual Studio Code"},{"location":"#stap-2-configureren","text":"","title":"Stap 2: Configureren"},{"location":"#aanmaken-analytics-environment","text":"Voor het werken met Python maken we een environment . Een environment is een afgeschermde omgeving waarin je Python packages kan installeren en verwijderen. Hoe je dat doet staat hier beschreven. Ook staat beschreven hoe je onze eigen packages kan installeren.","title":"Aanmaken analytics environment"},{"location":"#stap-3-aan-de-slag-met-een-standaardwerkwijze","text":"Als Python is geinstalleerd kan je aan de slag. Hoe je dat doet staat hier .","title":"Stap 3: Aan de slag met een standaardwerkwijze"},{"location":"aanmaken_analytics_environment/","text":"Aanmaken van analytics-environment Voor het werken met Python maken we een environment . Een environment is een afgeschermde omgeving waarin je Python packages kan installeren en verwijderen. Per PC kan je meerdere environments maken, maar dat is doorgaans niet nodig. In de stappen hieronder wordt de standaard 'analytics'-environment gemaakt met daarin packages die veel worden gebruikt voor data science. Het aanmaken van de environment doe je 1x. Steeds als je daarna met Python wil werken activeer je de environment en start je Python. Zorg dat Anaconda is geinstalleerd Download deze repository met Github Desktop Start PowerShell Ga naar de directory waar het bestand environment.yml staat. Bijvoorbeeld met: cd GitHub/hl-analytics-setup Controleer dat je in de goede directory bent met: ls Als je het volgende ziet, sta je in de goede directory: README.md analytics-setup environment.yml Geef dan de volgende commando's: conda config --add channels conda-forge conda config --set channel_priority 'strict' conda install -n base -c conda-forge mamba mamba env create -f environment.yml Installeren packages Installeer in de analytics-environment in ieder geval de analytics-tools-package. Hoe dat moet staat beschreven in de README.md Nu kun je werken in de analytics environment. Ga nu naar werken met analytics environment","title":"Aanmaken analytics environment"},{"location":"aanmaken_analytics_environment/#aanmaken-van-analytics-environment","text":"Voor het werken met Python maken we een environment . Een environment is een afgeschermde omgeving waarin je Python packages kan installeren en verwijderen. Per PC kan je meerdere environments maken, maar dat is doorgaans niet nodig. In de stappen hieronder wordt de standaard 'analytics'-environment gemaakt met daarin packages die veel worden gebruikt voor data science. Het aanmaken van de environment doe je 1x. Steeds als je daarna met Python wil werken activeer je de environment en start je Python. Zorg dat Anaconda is geinstalleerd Download deze repository met Github Desktop Start PowerShell Ga naar de directory waar het bestand environment.yml staat. Bijvoorbeeld met: cd GitHub/hl-analytics-setup Controleer dat je in de goede directory bent met: ls Als je het volgende ziet, sta je in de goede directory: README.md analytics-setup environment.yml Geef dan de volgende commando's: conda config --add channels conda-forge conda config --set channel_priority 'strict' conda install -n base -c conda-forge mamba mamba env create -f environment.yml","title":"Aanmaken van analytics-environment"},{"location":"aanmaken_analytics_environment/#installeren-packages","text":"Installeer in de analytics-environment in ieder geval de analytics-tools-package. Hoe dat moet staat beschreven in de README.md Nu kun je werken in de analytics environment. Ga nu naar werken met analytics environment","title":"Installeren packages"},{"location":"jupyter/","text":"Configureren Om het werken makkelijk te maken worden hieronder een aantal stappen gegeven die het werken eenvoudig maken. Het zijn stappen die je maar 1x doet, als je Anaconda hebt geinstalleerd. Opstarten-directory Jupyter lab Als je Jupyter lab opstart zie je standaard in de linkernavigatie de bestanden en directories van de plek waar je het commando gaf om jupyter lab te starten. Dat is onhandig. Je wil eigenlijk altijd dat je daar de directory ziet waar je je notebooks of python-code opslaat. Hieronder zetten een voorkeur voor Jupyter lab om dat te kunnen. Op het volgende bestand: op MacOS: /Users/ /.jupyter/jupyter_notebook_config.py op Linux: /home/ /.jupyter/jupyter_notebook_config.py op Windows: C:/Users/gebruikersnaam/.jupyter/jupyter_notebook_config.py Zoek in het bestand naar de regel die begint met #c.NotebookApp.notebook_dir = Haal bij die regel het # -teken weg. Vul achter het = -teken het pad naar de directory in waar je altijd wil starten. Het handigste is de directory waar Github alle lokale repositories opslaat. ... # will be loaded in alphabetical order. #c.NotebookApp.nbserver_extensions = {} ## The directory to use for notebooks and kernels. c.NotebookApp.notebook_dir = 'C:/Users/<gebruikersnaam>/Github' ## Whether to open in a browser after starting. The specific browser used is # platform dependent and determined by the python standard library `webbrowser` # module, unless it is overridden using the --browser (NotebookApp.browser) .... Sla het bestand op en sluit het bestand af.","title":"Opstart directory"},{"location":"jupyter/#configureren","text":"Om het werken makkelijk te maken worden hieronder een aantal stappen gegeven die het werken eenvoudig maken. Het zijn stappen die je maar 1x doet, als je Anaconda hebt geinstalleerd.","title":"Configureren"},{"location":"jupyter/#opstarten-directory-jupyter-lab","text":"Als je Jupyter lab opstart zie je standaard in de linkernavigatie de bestanden en directories van de plek waar je het commando gaf om jupyter lab te starten. Dat is onhandig. Je wil eigenlijk altijd dat je daar de directory ziet waar je je notebooks of python-code opslaat. Hieronder zetten een voorkeur voor Jupyter lab om dat te kunnen. Op het volgende bestand: op MacOS: /Users/ /.jupyter/jupyter_notebook_config.py op Linux: /home/ /.jupyter/jupyter_notebook_config.py op Windows: C:/Users/gebruikersnaam/.jupyter/jupyter_notebook_config.py Zoek in het bestand naar de regel die begint met #c.NotebookApp.notebook_dir = Haal bij die regel het # -teken weg. Vul achter het = -teken het pad naar de directory in waar je altijd wil starten. Het handigste is de directory waar Github alle lokale repositories opslaat. ... # will be loaded in alphabetical order. #c.NotebookApp.nbserver_extensions = {} ## The directory to use for notebooks and kernels. c.NotebookApp.notebook_dir = 'C:/Users/<gebruikersnaam>/Github' ## Whether to open in a browser after starting. The specific browser used is # platform dependent and determined by the python standard library `webbrowser` # module, unless it is overridden using the --browser (NotebookApp.browser) .... Sla het bestand op en sluit het bestand af.","title":"Opstarten-directory Jupyter lab"},{"location":"powershell/","text":"Werken met PowerShell PowerShell is een programma dat standaard is geinstalleerd op Windows. Als je het start krijg je een scherm te zien als hieronder:","title":"Powershell"},{"location":"powershell/#werken-met-powershell","text":"PowerShell is een programma dat standaard is geinstalleerd op Windows. Als je het start krijg je een scherm te zien als hieronder:","title":"Werken met PowerShell"},{"location":"updaten_environment/","text":"Updaten van environment Van tijd tot tijd zal het bestand environment.yml worden aangevuld (andere versie van packages, nieuwe packages toegevoegd, oude verwijderd). Om je environment te updaten volg je de volgende stappen. Update de reposity (doe een git pull & merge (of doe het via Github Desktop)) Start PowerShell Activeer de analytics -environment: conda activate analytics Ga naar de directory waar het bestand environment.yml staat Geef het volgende commando: conda env update --file environment.yml --prune","title":"Updates"},{"location":"updaten_environment/#updaten-van-environment","text":"Van tijd tot tijd zal het bestand environment.yml worden aangevuld (andere versie van packages, nieuwe packages toegevoegd, oude verwijderd). Om je environment te updaten volg je de volgende stappen. Update de reposity (doe een git pull & merge (of doe het via Github Desktop)) Start PowerShell Activeer de analytics -environment: conda activate analytics Ga naar de directory waar het bestand environment.yml staat Geef het volgende commando: conda env update --file environment.yml --prune","title":"Updaten van environment"},{"location":"werken_met_analytics_environment/","text":"Werken met de analytics-environment 'The shell is your friend'. Echt waar, dus start PowerShell . Iedere keer dat je wil werken met Python start je met PowerShell de analytics environment. Het maakt niet uit in welke directory je dat doet. Je start de environment met: conda activate analytics Daarna start je Jupyter lab met: jupyter lab","title":"Werken met environment"},{"location":"werken_met_analytics_environment/#werken-met-de-analytics-environment","text":"","title":"Werken met de analytics-environment"},{"location":"werken_met_analytics_environment/#the-shell-is-your-friend","text":"Echt waar, dus start PowerShell . Iedere keer dat je wil werken met Python start je met PowerShell de analytics environment. Het maakt niet uit in welke directory je dat doet. Je start de environment met: conda activate analytics Daarna start je Jupyter lab met: jupyter lab","title":"'The shell is your friend'."},{"location":"installatie/installeer_github_desktop/","text":"Installeer Github Desktop Het werken met Python en R lijkt veel op werken met software. Feitelijk schrijf je kleine stukjes code. Het is goed gebruik om je code op te slaan in een versiebeheersysteem, om twee redenen: je bouwt een geschiedenis op van je keuzes en verliest nooit code. je kan makkelijk en veilig gegevens delen met anderen. Maak account aan op Github Maak daarom eerst een account aan op Github (een dienst die versiebeheer online aanbiedt) Dowloaden Github Desktop Github Desktop is een tool om repositories op Github te kunnen benaderen. Om te kunnen werken met Github installeer je Github Desktop. Hoe je dat installeert staat hier uitgelegd. Downloaden repositories Als je in Github Desktop bent ingelogd en je gaat naar File>Clone repository dan kan je daar kiezen uit de verschillende repositories van hl-analytics. :exclamation: als je een repository cloned maak je een kopie op je eigen PC. Zorg ervoor dat die kopie niet op je OneDrive staat, dat kan tot synchronisatieproblemen leiden op OneDrive. In het plaatje hieronder zie je bij Local path dat je zelf een pad kan kiezen. Kies bijvoorbeeld voor een pad als: C:\\Users\\<gebruikersnaam>\\Github hl-analytics-setup De eerste repository die je kan downloaden vind je hier . analytics-tools Er is ook een repository met een aantal hulpmiddelen die het ons makkelijk maken om met datasets tewerken. Ook die kan je clonen.","title":"Installeer Github Desktop"},{"location":"installatie/installeer_github_desktop/#installeer-github-desktop","text":"Het werken met Python en R lijkt veel op werken met software. Feitelijk schrijf je kleine stukjes code. Het is goed gebruik om je code op te slaan in een versiebeheersysteem, om twee redenen: je bouwt een geschiedenis op van je keuzes en verliest nooit code. je kan makkelijk en veilig gegevens delen met anderen.","title":"Installeer Github Desktop"},{"location":"installatie/installeer_github_desktop/#maak-account-aan-op-github","text":"Maak daarom eerst een account aan op Github (een dienst die versiebeheer online aanbiedt)","title":"Maak account aan op Github"},{"location":"installatie/installeer_github_desktop/#dowloaden-github-desktop","text":"Github Desktop is een tool om repositories op Github te kunnen benaderen. Om te kunnen werken met Github installeer je Github Desktop. Hoe je dat installeert staat hier uitgelegd.","title":"Dowloaden Github Desktop"},{"location":"installatie/installeer_github_desktop/#downloaden-repositories","text":"Als je in Github Desktop bent ingelogd en je gaat naar File>Clone repository dan kan je daar kiezen uit de verschillende repositories van hl-analytics. :exclamation: als je een repository cloned maak je een kopie op je eigen PC. Zorg ervoor dat die kopie niet op je OneDrive staat, dat kan tot synchronisatieproblemen leiden op OneDrive. In het plaatje hieronder zie je bij Local path dat je zelf een pad kan kiezen. Kies bijvoorbeeld voor een pad als: C:\\Users\\<gebruikersnaam>\\Github","title":"Downloaden repositories"},{"location":"installatie/installeer_github_desktop/#hl-analytics-setup","text":"De eerste repository die je kan downloaden vind je hier .","title":"hl-analytics-setup"},{"location":"installatie/installeer_github_desktop/#analytics-tools","text":"Er is ook een repository met een aantal hulpmiddelen die het ons makkelijk maken om met datasets tewerken. Ook die kan je clonen.","title":"analytics-tools"},{"location":"installatie/installeer_python/","text":"Installeren van Python (Anaconda) Een beknopte handleiding voor het installeren van Python met Anaconda. Anaconda heeft zelf ook een goede beschrijving van hoe je het moet installeren. Ga naar Anaconda . Download de laatste 64-bits versie (eindigend op '_64.exe') Dubbelklik op het gedownloade bestand: Druk op Next. Druk op I agree. Kies voor de standaardoptie, 'Just me': Druk op 'Install'. Deze stap kan wel even duren (soms wel een half uur). Daarna klik je nog een aantal keer op volgende en is Anaconda ge\u00efnstalleerd. Start PowerShell Ga naar de condabin -directory waar je Anaconda hebt geinstalleerd, bijv. cd D:\\Anaconda3-BE\\condabin Ryp het volgende commando: ./conda.bat init powershell","title":"Installeer (Anaconda) Python"},{"location":"installatie/installeer_python/#installeren-van-python-anaconda","text":"Een beknopte handleiding voor het installeren van Python met Anaconda. Anaconda heeft zelf ook een goede beschrijving van hoe je het moet installeren. Ga naar Anaconda . Download de laatste 64-bits versie (eindigend op '_64.exe') Dubbelklik op het gedownloade bestand: Druk op Next. Druk op I agree. Kies voor de standaardoptie, 'Just me': Druk op 'Install'. Deze stap kan wel even duren (soms wel een half uur). Daarna klik je nog een aantal keer op volgende en is Anaconda ge\u00efnstalleerd. Start PowerShell Ga naar de condabin -directory waar je Anaconda hebt geinstalleerd, bijv. cd D:\\Anaconda3-BE\\condabin Ryp het volgende commando: ./conda.bat init powershell","title":"Installeren van Python (Anaconda)"}]}